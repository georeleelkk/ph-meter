<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="t1MYndMQ]3zL~;FHNug^" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="%JV/!{r4vV`4aGv,P$ZD" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace Newman {" line1="    /**" line2="     * ReadVoltage" line3="     */" line4="    //% blockId=ReadVoltage block=&quot;ReadVoltage&quot;" line5="    export function ReadVolt(): number {" line6="        return pins.analogReadPin(AnalogPin.P0) / 1024 * 5000;" line7="    }" line8="   " line9="" line10="    /**" line11="    * pHValue" line12="    */" line13="    //% blockId=pHValue block=&quot;Voltage At pH4 %Voltage_pH4|pH7 %Voltage_pH7&quot;" line14="    //%blockGap=2 weight=1" line15="    export function pH_Val(Voltage_pH4: number, Voltage_pH7: number): number {" line16="        let slope = 0;" line17="        let Numberercept = 0;" line18="        let phValue;" line19="" line20="        slope = (7 - 4) / ((Voltage_pH7 - 1500) / 3 - (Voltage_pH4 - 1500) / 3);" line21="        Numberercept = 7 - slope * (Voltage_pH7 - 1500) / 3;" line22="        phValue = slope * ((pins.analogReadPin(AnalogPin.P0) / 1024 * 5000) - 1500) / 3 + Numberercept;" line23="        return Math.round(phValue);" line24="    }" line25="" line26="}" numlines="27"></mutation></block></statement></block></xml>